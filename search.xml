<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java基础（三）</title>
      <link href="/2024/02/22/Java%E5%9F%BA%E7%A1%80(%E4%B8%89)/"/>
      <url>/2024/02/22/Java%E5%9F%BA%E7%A1%80(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-基础（三）"><a href="#Java-基础（三）" class="headerlink" title="Java 基础（三）"></a>Java 基础（三）</h1><h1 id="一、方法"><a href="#一、方法" class="headerlink" title="一、方法"></a>一、方法</h1><h2 id="1-方法概述"><a href="#1-方法概述" class="headerlink" title="1.方法概述"></a>1.方法概述</h2><p>假设有一个游戏程序，程序在运行过程中，要不断地发射炮弹(植物大战僵尸)。发射炮弹的动作需要编写100行的代码，在每次实现发射炮弹的地方都需要重复地编写这100行代码，这样程序会变得很臃肿，可读性也非常差。为了解决代码重复编写的问题，可以将发射炮弹的代码提取出来放在一个**{}<strong>中，并为这段代码</strong>起个名字**，这样在每次发射炮弹的地方通过这个名字来调用发射炮弹的代码就可以了。上述过程中，所提取出来的代码可以被看作是程序中定义的一个方法，程序在需要发射炮弹时调用该方法即可。</p><p>即：方法就是完成特定功能的代码块</p><ul><li>在很多语言里面都有函数的定义</li><li>函数在Java中被称为方法</li></ul><hr><h2 id="2-格式"><a href="#2-格式" class="headerlink" title="2.格式"></a>2.格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语句定义格式：</span><br><span class="line"><span class="comment">//注意：暂时严格按照格式编写</span></span><br><span class="line">    </span><br><span class="line">修饰符 返回值类型 方法名(参数类型<span class="number">1</span> 参数名<span class="number">1</span>,参数类型<span class="number">2</span> 参数名<span class="number">2</span>,...)&#123;</span><br><span class="line">        方法体;</span><br><span class="line">        <span class="keyword">return</span> 返回值;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>名词解释：</p><ul><li>修饰符：目前来说，修饰符固定写法 public static</li><li>返回值类型：用来限定方法的返回值类型，与return具体返回的值有关</li><li>方法名：随便起，要符合标识符命名规则</li><li>参数：<ul><li>两种参数：<ul><li>形参（方法定义时的名字参数）</li><li>实参（将来调用方法时实际传入的值）</li></ul></li><li>参数类型：<ul><li>基本数据类型<ul><li>引用数据类型</li></ul></li></ul></li></ul></li><li>参数名：随便起，要符合标识符命名规则</li><li>方法体：描述方法要干什么</li><li>return：表示结束整个方法，将结果返回给调用者</li><li>返回值：方法最终给调用者的结果，类型要与返回值类型有关联</li></ul></blockquote><p>注意事项：<br> 1、方法不能嵌套定义！！方法和方法是平级关系</p><p> 2、方法不调用，不执行</p><p>3、如果一个方法有返回值，调用的时候，有两种处理方式：<br>     1）使用一个变量接收方法的返回值  推荐<br>     2）直接使用方法的结果</p><p> 4、方法定义的时候,如果明确了有返回值类型,方法定义内部必要有一个return返回值</p><p>5、java提供了void关键字，表示方法没有返回值</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sumTwoNumber</span><span class="params">(<span class="type">int</span> i1, <span class="type">int</span> i2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> i1 + i2;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sumTwoNumber</span><span class="params">(<span class="type">int</span> i1,<span class="type">int</span> i2)</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> i1+i2;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> sumTwoNumber(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(r);</span><br><span class="line">        System.out.println(sumTwoNumber(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        System.out.println(sumTwoNumber(i1,i2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-方法的重载"><a href="#4-方法的重载" class="headerlink" title="4.方法的重载"></a>4.方法的重载</h2><p>方法的重载: 在同一个类中,方法名相同,方法的参数列表(参数的个数,参数类型)不同,与返回值无关的现象,叫做方法的重载.</p><p>注意事项:<br>       1. 传参的时候,注意数据类型大小关系<br>       2. 传递时候,根据顺序从左向右传参,顺序不要搞错.</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FunctionTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建键盘录入对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个数值:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二个数值:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(maxNumber(n1,n2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个方法, 比较两个int类型的值,返回最大值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxNumber</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-方法递归"><a href="#5-方法递归" class="headerlink" title="5.方法递归"></a>5.方法递归</h2><p>略</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础（二）</title>
      <link href="/2024/02/22/Java%E5%9F%BA%E7%A1%80(%E4%BA%8C)/"/>
      <url>/2024/02/22/Java%E5%9F%BA%E7%A1%80(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础-二"><a href="#Java基础-二" class="headerlink" title="Java基础(二)"></a>Java基础(二)</h1><h1 id="一、Scanner语句"><a href="#一、Scanner语句" class="headerlink" title="一、Scanner语句"></a>一、Scanner语句</h1><h2 id="1-作用："><a href="#1-作用：" class="headerlink" title="1.作用："></a>1.作用：</h2><p>使程序可以从键盘录入数据，提高程序的灵活性</p><h2 id="2-固定格式："><a href="#2-固定格式：" class="headerlink" title="2.固定格式："></a>2.固定格式：</h2><ul><li>导包(位置放到class定义的上面)<ul><li>import java.util.Scanner;</li></ul></li><li>创建对象<ul><li>Scanner sc &#x3D; new Scanner(System.in);</li></ul></li><li>接收数据<ul><li>int x &#x3D; sc.nextInt();</li></ul></li></ul><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">练习:</span></span><br><span class="line"><span class="comment">1.键盘录入两个数据，并对这两个数据求和，输出其结果</span></span><br><span class="line"><span class="comment">2.键盘录入三个数据，获取这三个数据中的最大值</span></span><br><span class="line"><span class="comment">3.键盘录入两个数据，比较这两个数据是否相等</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerText1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二个整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第三个整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">res1</span> <span class="operator">=</span> a1 + a2;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1与a2的和为&quot;</span>);</span><br><span class="line">        System.out.println(res1);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">res2</span> <span class="operator">=</span> (((a1&gt;a2)?a1:a2)&gt;a3)?((a1&gt;a2)?a1:a2):a3;</span><br><span class="line">        System.out.println(<span class="string">&quot;三个数据的最大值为&quot;</span>);</span><br><span class="line">        System.out.println(res2);</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res3</span> <span class="operator">=</span> (a1==a3)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1与a3是否相等&quot;</span>);</span><br><span class="line">        System.out.println(res3);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、流程控制语句"><a href="#二、流程控制语句" class="headerlink" title="二、流程控制语句"></a>二、流程控制语句</h1><h2 id="1-三种流程结构"><a href="#1-三种流程结构" class="headerlink" title="1.三种流程结构"></a>1.三种流程结构</h2><ul><li><strong>顺序结构</strong><ul><li>程序从上到下逐行地执行，中间没有任何判断和跳转。上面对某个变量的修改会影响到下面的代码。</li></ul></li><li><strong>分支结构</strong><ul><li>根据条件，选择性地执行某段代码。</li><li>有<code>if…else</code>和<code>switch-case</code>两种分支语句。</li></ul></li><li><strong>循环结构</strong><ul><li>根据循环条件，重复性的执行某段代码。</li><li>有<code>for</code>、<code>while</code>、<code>do-while</code>三种循环语句。</li><li>补充：JDK5.0 提供了<code>foreach</code>循环，方便的遍历集合、数组元素。（第12章集合中讲解）</li></ul></li></ul><h2 id="2-分支语句"><a href="#2-分支语句" class="headerlink" title="2.分支语句"></a>2.分支语句</h2><h3 id="2-1-if-else条件判断语句"><a href="#2-1-if-else条件判断语句" class="headerlink" title="2.1 if-else条件判断语句"></a>2.1 if-else条件判断语句</h3><ul><li>单分支条件判断：if</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式:</span><br><span class="line"><span class="keyword">if</span>(条件表达式)｛</span><br><span class="line">  语句块;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure><blockquote><p>条件表达式必须是布尔表达式（关系表达式或逻辑表达式）或布尔变量</p><p>结果为true则执行语句块，结果为false则不执行</p></blockquote><ul><li>双分支条件判断：if…else</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式:</span><br><span class="line"><span class="keyword">if</span>(条件表达式) &#123; </span><br><span class="line">  语句块<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  语句块<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>表达式结果为true则执行语句块1，结果为false则执行语句块2</p></blockquote><ul><li>多分支条件判断：if…else if…else</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">格式:</span><br><span class="line"><span class="keyword">if</span> (条件表达式<span class="number">1</span>) &#123;</span><br><span class="line">  语句块<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (条件表达式<span class="number">2</span>) &#123;</span><br><span class="line">  语句块<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (条件表达式n) &#123;</span><br><span class="line"> 语句块n;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  语句块n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一旦条件表达式为true，则进入执行相应的语句块。执行完对应的语句块之后，就跳出当前结构。</p></blockquote><h3 id="2-2-switch-case选择结构"><a href="#2-2-switch-case选择结构" class="headerlink" title="2.2 switch-case选择结构"></a>2.2 switch-case选择结构</h3><p>基本语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">switch(表达式):</span><br><span class="line">case 常量值1:</span><br><span class="line">语句体1;</span><br><span class="line">break;</span><br><span class="line">case 常量值2:</span><br><span class="line">语句体2</span><br><span class="line">case 常量值3:</span><br><span class="line">语句体3</span><br><span class="line">...</span><br><span class="line">default:</span><br><span class="line">语句体n;</span><br><span class="line">break;</span><br></pre></td></tr></table></figure><p>执行过程：</p><p>第1步：根据switch中表达式的值，依次匹配各个case。如果表达式的值等于某个case中的常量值，则执行对应case中的执行语句。</p><p>第2步：执行完此case的执行语句以后，<br>​              情况1：如果遇到break,则执行break并跳出当前的switch-case结构<br>​      情况2：如果没有遇到break，则会继续执行当前case之后的其它case中的执行语句。—&gt;case穿透<br>​       …<br>​       直到遇到break关键字或执行完所有的case及default的执行语句，跳出当前的switch-case结构</p><blockquote><p>注意：</p><ul><li><p>switch(表达式)中表达式的值必须是下述几种类型之一：byte，short，char，int，枚举 (jdk 5.0)，String (jdk 7.0)；</p></li><li><p>case子句中的值必须是常量，不能是变量名或不确定的表达式值或范围；</p></li><li><p>同一个switch语句，所有case子句中的常量值互不相同；</p></li><li><p>break语句用来在执行完一个case分支后使程序跳出switch语句块；</p><p>如果没有break，程序会顺序执行到switch结尾；</p></li><li><p>default子句是可选的。同时，位置也是灵活的。当没有匹配的case时，执行default语句。</p></li></ul></blockquote><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 根据成绩输出对应的等级，使用 switch 语句实现。</span></span><br><span class="line"><span class="comment">a) A 级   [90,100]</span></span><br><span class="line"><span class="comment">b) B 级   [80,90)</span></span><br><span class="line"><span class="comment">c) C 级   [70,80)</span></span><br><span class="line"><span class="comment">d) D 级   [60,70)</span></span><br><span class="line"><span class="comment">e) E 级   [0,60)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Work3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您的成绩&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scan.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> score/<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">switch</span> (n)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:A级&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:A级&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:B级&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:C级&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:D级&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩是:E级&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-if语句与switch语句比较"><a href="#2-3-if语句与switch语句比较" class="headerlink" title="2.3 if语句与switch语句比较"></a>2.3 if语句与switch语句比较</h3><ul><li>凡是使用switch-case的结构都可以转换为if-else结构。反之不一定</li><li>若既能使用switch-case,又能使用if-else,建议使用switch-case。因为效率稍高</li><li>细节对比：<ul><li>if-else语句优势<ul><li>if语句的条件是一个布尔类型值，if条件表达式为true则进入分支，可以用于范围的判断，也可以用于等值的判断，<code>使用范围更广</code>。</li><li>switch语句的条件是一个常量值（byte,short,int,char,枚举,String），只能判断某个变量或表达式的结果是否等于某个常量值，<code>使用场景较狭窄</code>。</li></ul></li><li>switch语句优势<ul><li>当条件是判断某个变量或表达式是否等于某个固定的常量值时，使用if和switch都可以，习惯上使用switch更多。因为<code>效率稍高</code>。当条件是区间范围的判断时，只能使用if语句。</li><li>使用switch可以利用<code>穿透性</code>，同时执行多个分支，而if…else没有穿透性。</li></ul></li></ul></li></ul><h2 id="3-循环语句"><a href="#3-循环语句" class="headerlink" title="3. 循环语句"></a>3. 循环语句</h2><p>​循环语句具有在<code>某些条件</code>满足的情况下，<code>反复执行</code>特定代码的功能。</p><h3 id="3-1-循环结构四要素："><a href="#3-1-循环结构四要素：" class="headerlink" title="3.1 循环结构四要素："></a>3.1 循环结构四要素：</h3><ul><li>初始化条件语句</li><li>判断条件语句</li><li>控制条件语句</li><li>循环体</li></ul><h3 id="3-2-for循环"><a href="#3-2-for循环" class="headerlink" title="3.2 for循环"></a>3.2 for循环</h3><h4 id="3-2-1-基本语法"><a href="#3-2-1-基本语法" class="headerlink" title="3.2.1 基本语法"></a>3.2.1 基本语法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>循环的语句定义格式:</span><br><span class="line">    <span class="keyword">for</span>(初始化条件语句;判断条件语句;控制条件语句)&#123;</span><br><span class="line">        循环体;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意事项：<br> 1、初始化条件语句只会在循环开始执行一次，后续不执行<br> 2、初始化条件语句可以提前写在for循环外面, 这样作用域在for循环外部也可以使用初始化条件语句定义的变量<br> 3、当for循环中的语句体只有一行的时候，大括号可以省略, 建议永远不要省略大括号<br> 4、最简单的for死循环就是for(;;){…}</p></blockquote><h4 id="3-2-2案例："><a href="#3-2-2案例：" class="headerlink" title="3.2.2案例："></a>3.2.2案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">控制台输出九九乘法表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(j + <span class="string">&quot;*&quot;</span> + i + <span class="string">&quot;=&quot;</span> + (j * i) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-while循环"><a href="#3-3-while循环" class="headerlink" title="3.3 while循环"></a>3.3 while循环</h3><h4 id="3-3-1-基本语法"><a href="#3-3-1-基本语法" class="headerlink" title="3.3.1 基本语法"></a>3.3.1 基本语法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语句定义格式：</span><br><span class="line">    初始化条件语句;</span><br><span class="line">    <span class="keyword">while</span>(判断条件语句)&#123;</span><br><span class="line">        循环体;</span><br><span class="line">        控制条件语句;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-2-案例："><a href="#3-3-2-案例：" class="headerlink" title="3.3.2 案例："></a>3.3.2 案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    8848m，我现在有一张足够大的纸张，厚度为：0.01m。请问，我折叠多少次，就可以保证厚度不低于珠穆朗玛峰的高度?</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">high</span> <span class="operator">=</span> <span class="number">884800</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">houDu</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (houDu&lt;high)&#123;</span><br><span class="line">            houDu*=<span class="number">2</span>;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;共折叠 &quot;</span>+count+<span class="string">&quot; 次，最终厚度为：&quot;</span>+houDu);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-do-while循环"><a href="#3-4-do-while循环" class="headerlink" title="3.4 do-while循环"></a>3.4 do-while循环</h3><h4 id="3-4-1-基本语法"><a href="#3-4-1-基本语法" class="headerlink" title="3.4.1 基本语法"></a>3.4.1 基本语法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化条件语句;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                循环体语句;</span><br><span class="line">                控制条件语句;</span><br><span class="line">            &#125;<span class="keyword">while</span>(判断条件语句);</span><br></pre></td></tr></table></figure><blockquote><p>do..while循环，无论条件是否满足，都会执行一次循环体内容。</p></blockquote><h3 id="3-5-三种循环的异同"><a href="#3-5-三种循环的异同" class="headerlink" title="3.5 三种循环的异同"></a>3.5 三种循环的异同</h3><ul><li><strong>三种循环结构都具有四个要素：</strong><ul><li>循环变量的初始化条件</li><li>循环条件</li><li>循环体语句块</li><li>循环变量的修改的迭代表达式</li></ul></li></ul><ul><li><strong>从循环次数角度分析</strong><ul><li>do-while循环至少执行一次循环体语句。</li><li>for和while循环先判断循环条件语句是否成立，然后决定是否执行循环体。</li></ul></li><li><strong>如何选择</strong><ul><li>遍历有明显的循环次数（范围）的需求，选择for循环</li><li>遍历没有明显的循环次数（范围）的需求，选择while循环</li><li>如果循环体语句块至少执行一次，可以考虑使用do-while循环</li><li>本质上：三种循环之间完全可以互相转换，都能实现循环的功能</li></ul></li></ul><h3 id="3-6-无限循环"><a href="#3-6-无限循环" class="headerlink" title="3.6 无限循环"></a>3.6 无限循环</h3><p><strong>语法格式：</strong></p><ul><li>最简单”无限”循环格式：<code>while(true)</code> , <code>for(;;)</code></li></ul><p><strong>适用场景：</strong></p><ul><li>开发中，有时并不确定需要循环多少次，需要根据循环体内部某些条件，来控制循环的结束（使用break）。</li><li>如果此循环结构不能终止，则构成了死循环！开发中要避免出现死循环。</li></ul><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoveYouForever</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我爱你！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        System.out.println(&quot;end&quot;);//永远无法到达的语句，编译报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-7-嵌套循环"><a href="#3-7-嵌套循环" class="headerlink" title="3.7 嵌套循环"></a>3.7 嵌套循环</h3><h4 id="3-7-1-使用说明"><a href="#3-7-1-使用说明" class="headerlink" title="3.7.1 使用说明"></a>3.7.1 使用说明</h4><ul><li><strong>嵌套循环</strong>，是指一个循环结构A的循环体是另一个循环结构B。比如，for循环里面还有一个for循环，就是嵌套循环。其中，for ,while ,do-while均可以作为外层循环或内层循环。<ul><li>外层循环：循环结构A</li><li>内层循环：循环结构B</li></ul></li><li>实质上，<code>嵌套循环就是把内层循环当成外层循环的循环体</code>。只有当内层循环的循环条件为false时，才会完全跳出内层循环，才可结束外层的当次循环，开始下一次的外层循环。</li><li>设外层循环次数为<code>m</code>次，内层为<code>n</code>次，则内层循环体实际上需要执行<code>m*n</code>次。</li><li><strong>技巧：</strong>从二维图形的角度看，外层循环控制<code>行数</code>，内层循环控制<code>列数</code>。</li><li><strong>开发经验：</strong>实际开发中，我们最多见到的嵌套循环是两层。一般不会出现超过三层的嵌套循环。如果将要出现，一定要停下来重新梳理业务逻辑，重新思考算法的实现，控制在三层以内。否则，可读性会很差。</li></ul><p>​<strong>执行特点：</strong>外层循环执行一次，内层循环执行一轮。</p><h4 id="3-7-2-案例："><a href="#3-7-2-案例：" class="headerlink" title="3.7.2 案例："></a>3.7.2 案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  从键盘输入某个十进制整数，转换成对应的二进制整数并输出。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   进制  商  余数</span></span><br><span class="line"><span class="comment">    2   23</span></span><br><span class="line"><span class="comment">    2   11   1</span></span><br><span class="line"><span class="comment">    2   5    1      </span></span><br><span class="line"><span class="comment">    2   2    1</span></span><br><span class="line"><span class="comment">    2   1    0</span></span><br><span class="line"><span class="comment">        0    1</span></span><br><span class="line"><span class="comment">————&gt;&gt; 10111 ————&gt;&gt; 1*2^4+0*2^3+1*2^2+1*2^1+1*2^0 = 23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Work7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scan</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> scan.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">shang</span> <span class="operator">=</span> num;</span><br><span class="line">        <span class="type">int</span> yushu;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (shang != <span class="number">0</span>) &#123;</span><br><span class="line">            yushu = shang % <span class="number">2</span>;</span><br><span class="line">            shang = shang / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">                yushu = yushu*<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res =res+yushu;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;对应二进制数为:&quot;</span>+res);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-break和continue"><a href="#4-break和continue" class="headerlink" title="4.break和continue"></a>4.break和continue</h3><h4 id="4-1-使用说明"><a href="#4-1-使用说明" class="headerlink" title="4.1 使用说明"></a>4.1 使用说明</h4><table><thead><tr><th></th><th>适用范围</th><th>在循环结构中使用的作用</th><th>相同点</th></tr></thead><tbody><tr><td>break</td><td>switch-case语句；循环结构循环结构</td><td>一旦执行，就结束(或跳出)当前循环结构</td><td>此关键字的后面，不能声明语句</td></tr><tr><td>continue</td><td></td><td>一旦执行，就结束(或跳出)当次循环结构</td><td>此关键字的后面，不能声明语句</td></tr></tbody></table><h4 id="4-2-应用举例"><a href="#4-2-应用举例" class="headerlink" title="4.2 应用举例"></a>4.2 应用举例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BreakContinueTest1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//break;//123</span></span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//123567910</span></span><br><span class="line"><span class="comment">//如下的语句不可能被执行，编译不通过</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;今晚迪丽热巴要约我吃饭&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.print(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;####&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//嵌套循环中的使用</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">4</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;j &lt;= <span class="number">10</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//break; //结束的是包裹break关键字的最近的一层循环！</span></span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//结束的是包裹break关键字的最近的一层循环的当次！</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.print(j);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-带标签使用"><a href="#4-3-带标签使用" class="headerlink" title="4.3 带标签使用"></a>4.3 带标签使用</h4><ul><li>break语句出现在多层嵌套的循环语句体中时，可以通过标签指明要终止的是哪一层循环。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span>语句用于终止某个语句块的执行</span><br><span class="line">&#123;    …… </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> ……</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>语句出现在多层嵌套的语句块中时，可以通过标签指明要终止的是哪一层语句块 </span><br><span class="line">label1: &#123;   ……        </span><br><span class="line">label2:     &#123;   ……</span><br><span class="line">label3: &#123;   ……</span><br><span class="line">           <span class="keyword">break</span> label2;</span><br><span class="line">           ……</span><br><span class="line"> &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>continue语句出现在多层嵌套的循环语句体中时，也可以通过标签指明要跳过的是哪一层循环。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BreakContinueTest2</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">l:<span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">4</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;j &lt;= <span class="number">10</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//break l;</span></span><br><span class="line"><span class="keyword">continue</span> l;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(j);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 标号语句必须紧接在循环的头部。标号语句不能用在非循环语句的前面。</p></blockquote><h1 id="三、-如何获取一个随机数"><a href="#三、-如何获取一个随机数" class="headerlink" title="三、 如何获取一个随机数"></a>三、 如何获取一个随机数</h1><p>如何产生一个指定范围的随机整数？</p><p>1、Math类的random()的调用，会返回一个[0,1)范围的一个double型值</p><p>2、Math.random() * 100  —&gt;  [0,100)<br>      (int)(Math.random() * 100)—&gt; [0,99]<br>      (int)(Math.random() * 100) + 5  —-&gt; [5,104]</p><p>3、如何获取<code>[a,b]</code>范围内的随机整数呢？<code>(int)(Math.random() * (b - a + 1)) + a</code></p><p>4、举例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MathRandomTest</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">double</span> <span class="variable">value</span> <span class="operator">=</span> Math.random();</span><br><span class="line">System.out.println(value);</span><br><span class="line"></span><br><span class="line"><span class="comment">//[1,6]</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">6</span>) + <span class="number">1</span>; <span class="comment">//</span></span><br><span class="line">System.out.println(number);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础语法（一）</title>
      <link href="/2024/02/21/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2024/02/21/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="python基础语法"><a href="#python基础语法" class="headerlink" title="python基础语法"></a>python基础语法</h1><h2 id="一、输入和输出"><a href="#一、输入和输出" class="headerlink" title="一、输入和输出"></a>一、输入和输出</h2><h3 id="1-输入"><a href="#1-输入" class="headerlink" title="1.输入"></a>1.输入</h3><ul><li>input()</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>(<span class="string">&#x27;提示词:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))      <span class="comment"># &lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>输入的所有内容都为字符串</p></blockquote><ul><li>特殊用法：用作停顿</li></ul><h3 id="2-输出"><a href="#2-输出" class="headerlink" title="2.输出"></a>2.输出</h3><ul><li>print()</li></ul><blockquote><p>print()源码 ；Ctrl + 鼠标左键选中函数，查看源码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print</span>(<span class="params">self, *args, sep=<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;\n&#x27;</span>, file=<span class="literal">None</span></span>): <span class="comment"># known special case of print</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    print(value, ..., sep=&#x27; &#x27;, end=&#x27;\n&#x27;, file=sys.stdout, flush=False)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Prints the values to a stream, or to sys.stdout by default.</span></span><br><span class="line"><span class="string">    Optional keyword arguments:</span></span><br><span class="line"><span class="string">    file:  a file-like object (stream); defaults to the current sys.stdout.</span></span><br><span class="line"><span class="string">    sep:   string inserted between values, default a space.</span></span><br><span class="line"><span class="string">    end:   string appended after the last value, default a newline.</span></span><br><span class="line"><span class="string">    flush: whether to forcibly flush the stream.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>sep参数 逗号拼接值的时候，默认是以空格拼接</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的姓名：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;您的姓名是：&#x27;</span>+name)  <span class="comment"># 您的姓名是:zhitu</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;您的姓名是:&#x27;</span>, name) <span class="comment"># 您的姓名是: zhitu</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用修改sep参数的值来修改拼接符号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;您的姓名是:&#x27;</span>, name, sep=<span class="string">&#x27;&#x27;</span>) <span class="comment"># 您的姓名是:zhitu</span></span><br></pre></td></tr></table></figure><ul><li>end 指定输出结尾的方式，默认是\n换行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>,end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;world&quot;</span>)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">hello,world</span><br></pre></td></tr></table></figure><h2 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h2><ul><li>python提供了一种类似于数学里未知数的表达，将一个值赋值给一个未知数，这个未知数在python里叫做变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;zhitu&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p>给变量取名遵循的原则</p><ul><li>由英文大小写组成，数字，下划线组成</li><li>不能以数字开头</li><li>不能是python中的关键字</li></ul></li><li><p>给变量起名字的规范</p><ul><li>要见名知意 name  </li><li>起名字的格式遵循驼峰式或者下划线式</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 驼峰式 给变量起名，首个单词全部小写，从第二个单词开始，首字母大写</span></span><br><span class="line">highStudent = <span class="string">&#x27;zhitu&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下划线式 单词全部小写，由下划线拼接</span></span><br><span class="line">high_student = <span class="string">&#x27;zhitu&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="三、基本数据类型"><a href="#三、基本数据类型" class="headerlink" title="三、基本数据类型"></a>三、基本数据类型</h2><h3 id="1-字符串-str"><a href="#1-字符串-str" class="headerlink" title="1.字符串 str"></a>1.字符串 str</h3><ul><li>单引号或双引号将若干个字符括起来的字符序列叫做字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1 = <span class="string">&#x27;这是一个字符串&#x27;</span></span><br><span class="line">a2 = <span class="string">&quot;这是一个字符串&quot;</span></span><br></pre></td></tr></table></figure><ul><li>使用三个单引号或三个双引号括起来的字符序列，叫做字符串</li></ul><p>（可以多行编写）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a3 = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这也是一</span></span><br><span class="line"><span class="string">个字符串</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-整数-int"><a href="#2-整数-int" class="headerlink" title="2.整数 int"></a>2.整数 int</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num1 = <span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="3-小数-float"><a href="#3-小数-float" class="headerlink" title="3.小数 float"></a>3.小数 float</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num2 = <span class="number">12.34</span></span><br></pre></td></tr></table></figure><h3 id="4-布尔-bool"><a href="#4-布尔-bool" class="headerlink" title="4.布尔 bool"></a>4.布尔 bool</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="四、类型转换"><a href="#四、类型转换" class="headerlink" title="四、类型转换"></a>四、类型转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> s1 = <span class="string">&#x27;100&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;100&#x27;</span> + <span class="number">100</span> <span class="comment"># python中不允许字符串直接与数值相加</span></span><br><span class="line"><span class="built_in">print</span>(s2)</span><br></pre></td></tr></table></figure><blockquote><p>代码出错有可能是数据类型错误，需要转换</p></blockquote><h3 id="1-转整型"><a href="#1-转整型" class="headerlink" title="1.转整型"></a>1.转整型</h3><ul><li>int()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;100&#x27;</span></span><br><span class="line"><span class="comment"># 语法</span></span><br><span class="line">s2 = <span class="built_in">int</span>(<span class="string">&#x27;100&#x27;</span>) + <span class="number">100</span> <span class="comment"># 输出s2 = 200</span></span><br><span class="line"><span class="built_in">print</span>(s2)</span><br></pre></td></tr></table></figure><blockquote><p>字符串中符合数值的样式才可以转数值，否则报错</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s3 = <span class="built_in">int</span>(<span class="string">&#x27;数加&#x27;</span>) <span class="comment">#报错</span></span><br></pre></td></tr></table></figure><h3 id="2-转字符串"><a href="#2-转字符串" class="headerlink" title="2.转字符串"></a>2.转字符串</h3><ul><li>str()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">s4 = <span class="built_in">str</span>(<span class="number">200</span>)</span><br><span class="line"><span class="built_in">print</span>(s4)  <span class="comment"># 输出200</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(s4)) <span class="comment"># 输出&lt;class &#x27;str&#x27;&gt; (字符串类型)</span></span><br></pre></td></tr></table></figure><blockquote><p>使用python内置的type() 函数查看元素数据类型</p></blockquote><h3 id="3-转布尔"><a href="#3-转布尔" class="headerlink" title="3.转布尔"></a>3.转布尔</h3><ul><li>bool()</li></ul><blockquote><p>整型值为0，小数值为0，字符串为空转布尔都为False,其余都为true</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0</span>)) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">1</span>)) <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0.0</span>)) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&#x27;0&#x27;</span>)) <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="五、注释"><a href="#五、注释" class="headerlink" title="五、注释"></a>五、注释</h2><blockquote><p>用于解释说明的文字，不参与代码解释运行</p><ul><li>帮助我们理解代码逻辑</li><li>帮助我们排错</li></ul></blockquote><ul><li>单行注释 “#加空格 跟要注释的文字”</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一行注释</span></span><br></pre></td></tr></table></figure><ul><li>多行注释 使用三个三引号或三个双引号括起来</li></ul><blockquote><p>不用变量接收的字符串可以当做注释使用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这是多</span></span><br><span class="line"><span class="string">行注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>快捷键：ctrl + &#x2F; 选中要注释的内容，再按一次取消注释</li></ul><h2 id="六、pass"><a href="#六、pass" class="headerlink" title="六、pass"></a>六、pass</h2><ul><li>主要作用是来维护语法规范的，用于后续学习中的语句结构中，维持语法的完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">um1 = <span class="number">10</span></span><br><span class="line">num2 = <span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> num1&gt;num2:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;num1小于num2&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="七、字符串格式化"><a href="#七、字符串格式化" class="headerlink" title="七、字符串格式化"></a>七、字符串格式化</h2><blockquote><p>需求：</p><p>输出的内容：您的姓名是xxx, 年龄是xx, 就读于xx, 专业是xx。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原始字符串拼接做法</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的姓名&#x27;</span>)</span><br><span class="line">age = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的年龄&#x27;</span>)</span><br><span class="line">university = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的学校&#x27;</span>)</span><br><span class="line">major = <span class="built_in">input</span>(<span class="string">&#x27;请输入您的专业&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="原始字符串拼接方法"><a href="#原始字符串拼接方法" class="headerlink" title="原始字符串拼接方法"></a>原始字符串拼接方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;您的姓名是：&#x27;</span>+name+<span class="string">&#x27;，您的年龄是：&#x27;</span>+age+<span class="string">&#x27;,就读于：&#x27;</span>+university,major+<span class="string">&#x27;专业&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(text)</span><br></pre></td></tr></table></figure><h4 id="1-format-方法"><a href="#1-format-方法" class="headerlink" title="1.format()方法"></a>1.format()方法</h4><blockquote><p>官方推荐，所有python版本均适用</p></blockquote><ul><li>按照默认顺序填充</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;您的姓名是&#123;&#125;，年龄是&#123;&#125;，就读于&#123;&#125;，&#123;&#125;专业&#x27;</span>.<span class="built_in">format</span>(name,age,university,major)</span><br></pre></td></tr></table></figure><ul><li>按照索引顺序填充</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;您的姓名是&#123;0&#125;,年龄是&#123;1&#125;,就读于&#123;2&#125;,&#123;3&#125;专业&#x27;</span>.<span class="built_in">format</span>(name,age,university,major)</span><br></pre></td></tr></table></figure><ul><li>对应变量填充</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;您的姓名是&#123;a&#125;,年龄是&#123;b&#125;,就读于&#123;c&#125;,&#123;d&#125;专业&quot;</span>.<span class="built_in">format</span>(a=name, b=age, c=university, d=major)</span><br></pre></td></tr></table></figure><h4 id="2-方法"><a href="#2-方法" class="headerlink" title="2.%()方法"></a>2.%()方法</h4><blockquote><p>不推荐</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;您的姓名是%s,年龄是%s,就读于%s,%s专业&quot;</span> % (name, age, university, major)</span><br></pre></td></tr></table></figure><h4 id="3-f-方法"><a href="#3-f-方法" class="headerlink" title="3.f-{}方法"></a>3.f-{}方法</h4><blockquote><p>python3.6版本开始出现的方法；推荐</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">f&#x27;您的姓名是<span class="subst">&#123;name&#125;</span>，年龄是<span class="subst">&#123;age&#125;</span>，就读于<span class="subst">&#123;university&#125;</span>，<span class="subst">&#123;major&#125;</span>专业&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="八、语句结构"><a href="#八、语句结构" class="headerlink" title="八、语句结构"></a>八、语句结构</h2><h3 id="1-选择结构"><a href="#1-选择结构" class="headerlink" title="1.选择结构"></a>1.选择结构</h3><h4 id="1-1if语句"><a href="#1-1if语句" class="headerlink" title="1.1if语句"></a>1.1if语句</h4><p>  注意事项：</p><ul><li><p>python严格的使用缩进来表示包含关系</p></li><li><p>if语句中必须要有一个语句体，如果不知道要实现什么，你可以使用pass维护完整性</p></li><li><p>格式1(一个选择):</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 布尔类型结果的值:</span><br><span class="line">    当<span class="keyword">if</span>中是<span class="literal">True</span>的时候执行这里的代码</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;请输入您的年龄：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(age) &gt; <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您成年了！&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>格式2 (有两个选择)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 布尔类型结果的值:</span><br><span class="line">当<span class="keyword">if</span>中是<span class="literal">True</span>的时候执行这里的代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    当<span class="keyword">if</span>中是<span class="literal">False</span>的时候执行这里的代码</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;请输入您的年龄：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(age) &gt; <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您成年了！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您未成年！&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>格式3：(多个选择)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 布尔类型结果的值:</span><br><span class="line">当<span class="keyword">if</span>中是<span class="literal">True</span>的时候执行这里的代码</span><br><span class="line"><span class="keyword">elif</span> 布尔类型结果的值:</span><br><span class="line">    当<span class="keyword">elif</span>中是<span class="literal">True</span>的时候执行这里的代码</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">以上都不满足是，执行这里的代码</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">input</span>(<span class="string">&quot;请输入您的考试成绩：&quot;</span>)</span><br><span class="line">score = <span class="built_in">int</span>(score)</span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;= score &gt;= <span class="number">90</span>:  <span class="comment"># python是允许连续比较的</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;奖励吃肯德基&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">90</span> &gt; score &gt;= <span class="number">70</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;奖励一套试卷&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">70</span> &gt; score &gt;= <span class="number">60</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;奖励三套试卷&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">0</span> &lt;= score &lt; <span class="number">60</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;棍棒伺候&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入错误，请在0-100中输入&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-循环结构"><a href="#2-循环结构" class="headerlink" title="2.循环结构"></a>2.循环结构</h3><ul><li>range()函数可以生成一个范围的序列数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>(<span class="number">10</span>) <span class="comment"># 0,1,2,3,4,5,6,7,8,9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给定开始值和结束值(左闭右开区间)</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>) <span class="comment"># 1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以给定一个步长</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>,<span class="number">2</span>) <span class="comment"># 1,3,5,7,9</span></span><br></pre></td></tr></table></figure><h4 id="2-1for循环"><a href="#2-1for循环" class="headerlink" title="2.1for循环"></a>2.1for循环</h4><ul><li>格式1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量<span class="number">1</span>,[变量<span class="number">2</span>,..] <span class="keyword">in</span> 可以遍历的序列:</span><br><span class="line">使用变量</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需求：在控制台中输出10次hello world</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 需求：求1-100之和</span></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    res = res + i</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;1-100的和为<span class="subst">&#123;res&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>格式2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量<span class="number">1</span>,[变量<span class="number">2</span>,..] <span class="keyword">in</span> 可以遍历的序列:</span><br><span class="line">使用变量</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">for</span>循环正常结束的情况下，才会走<span class="keyword">else</span></span><br></pre></td></tr></table></figure><h4 id="2-2while循环"><a href="#2-2while循环" class="headerlink" title="2.2while循环"></a>2.2while循环</h4><ul><li>格式1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">bool</span>类型的值:</span><br><span class="line">语句体</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需求：使用while循环输出10次hello world</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> num &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">    num = num + <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>格式2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">bool</span>类型的值:</span><br><span class="line">语句体</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">while</span>循环正常结束的情况下，才会走<span class="keyword">else</span></span><br></pre></td></tr></table></figure><hr><ul><li>for循环和while的区别<ul><li>for循环主要应用在确定了一个范围内循环</li><li>当范围不确定的时候优先使用while循环</li></ul></li></ul><h3 id="3-条件控制语句"><a href="#3-条件控制语句" class="headerlink" title="3.条件控制语句"></a>3.条件控制语句</h3><h4 id="3-1-continue-跳过当次循环"><a href="#3-1-continue-跳过当次循环" class="headerlink" title="3.1 continue 跳过当次循环"></a>3.1 continue 跳过当次循环</h4><ul><li>需求：输出1-10，当遇到5的时候，使用一次continue</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;好好学习，天天向上&quot;</span>)  <span class="comment"># 这里的else会正常执行</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用while循环改写</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> num &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">5</span>:</span><br><span class="line">        num = num + <span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>) <span class="comment"># 这里的else会正常执行</span></span><br></pre></td></tr></table></figure><h4 id="3-2break-终止循环"><a href="#3-2break-终止循环" class="headerlink" title="3.2break 终止循环"></a>3.2break 终止循环</h4><ul><li>需求：输出1-10，当遇到5的时候，使用一次break</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 结束整个for循环</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;今天天气不错&quot;</span>)  <span class="comment"># 循环中遇到break，这里的else不会执行</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)  <span class="comment"># 正常执行</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用while循环改写</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> num &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">5</span>:</span><br><span class="line">        num = num + <span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>) <span class="comment"># 循环中遇到break，这里的else不会执行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(num) <span class="comment"># 6</span></span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><ul><li>计算1~100中奇数的和</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础（一）</title>
      <link href="/2024/02/21/Java%E5%9F%BA%E7%A1%80(%E4%B8%80)/"/>
      <url>/2024/02/21/Java%E5%9F%BA%E7%A1%80(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础-一"><a href="#Java基础-一" class="headerlink" title="Java基础(一)"></a>Java基础(一)</h1><h2 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h2><h3 id="1-什么是注释"><a href="#1-什么是注释" class="headerlink" title="1.什么是注释"></a>1.什么是注释</h3><p>源文件中用于解释说明程序的文字就是注释</p><h3 id="2-Java中注释的类型"><a href="#2-Java中注释的类型" class="headerlink" title="2.Java中注释的类型"></a>2.Java中注释的类型</h3><ul><li>单行注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是一行注释</span></span><br></pre></td></tr></table></figure><ul><li>多行注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注释文字1</span></span><br><span class="line"><span class="comment">注释文字2</span></span><br><span class="line"><span class="comment">注释文字3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>文档注释（java特有）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"><span class="doctag">@author</span>指定java程序的作者</span></span><br><span class="line"><span class="comment"><span class="doctag">@version</span> 指定源文件的版本</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="3-注释的作用"><a href="#3-注释的作用" class="headerlink" title="3.注释的作用"></a>3.注释的作用</h3><ul><li>提高程序的可阅读性</li><li>是调试程序的重要方法</li></ul><blockquote><p>注意：</p><ul><li>单行注释与多行注释不参与程序的编译运行</li><li>多行注释不能嵌套使用</li><li>文档注释内容可以被JDK提供的工具javadoc所解析，生成一套以网页文件形式体现该文件的说明文档</li></ul></blockquote><h2 id="二、关键字（keyword）"><a href="#二、关键字（keyword）" class="headerlink" title="二、关键字（keyword）"></a>二、关键字（keyword）</h2><ul><li>定义：<strong>被Java语言赋予了特殊含义，用做专门用途的字符串（或单词）</strong></li><li>特点：全部关键字都是<code>小写字母</code>。</li><li>关键字比较多，不需要死记硬背，学到哪里记到哪里即可。</li><li>官方地址： <a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html">https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html</a></li></ul><blockquote><p>说明：</p><ol><li>关键字一共<code>50个</code>，其中<code>const</code>和<code>goto</code>是<code>保留字</code>(reserved word)。</li><li><code>true</code>，<code>false</code>，<code>null</code>不在其中，它们看起来像关键字，其实是字面量，表示特殊的布尔值和空值。</li></ol></blockquote><p><strong>用于定义数据类型的关键字：</strong></p><table><thead><tr><th><strong>class</strong></th><th><strong>interface</strong></th><th><strong>enum</strong></th><th><strong>byte</strong></th><th><strong>short</strong></th></tr></thead><tbody><tr><td><strong>int</strong></td><td><strong>long</strong></td><td><strong>float</strong></td><td><strong>double</strong></td><td><strong>char</strong></td></tr><tr><td><strong>boolean</strong></td><td><strong>void</strong></td><td></td><td></td><td></td></tr></tbody></table><p><strong>用于定义流程控制的关键字:</strong></p><table><thead><tr><th><strong>if</strong></th><th><strong>else</strong></th><th><strong>switch</strong></th><th><strong>case</strong></th><th><strong>default</strong></th></tr></thead><tbody><tr><td><strong>while</strong></td><td><strong>do</strong></td><td><strong>for</strong></td><td><strong>break</strong></td><td><strong>continue</strong></td></tr><tr><td><strong>return</strong></td><td></td><td></td><td></td><td></td></tr></tbody></table><p><strong>用于定义访问权限修饰符的关键字：</strong></p><table><thead><tr><th>private</th><th>protected</th><th>public</th><th></th><th></th></tr></thead></table><p><strong>用于定义类、函数、变量修饰符的关键字：</strong></p><table><thead><tr><th>abstract</th><th>final</th><th>static</th><th>synchronized</th><th></th></tr></thead></table><p><strong>用于定义类与类之间关系的关键字：</strong></p><table><thead><tr><th>extends</th><th>implements</th><th></th><th></th><th></th></tr></thead></table><p><strong>用于定义建立实例及引用实例，判断实例的关键字：</strong></p><table><thead><tr><th>new</th><th>this</th><th>super</th><th>instanceof</th><th></th></tr></thead></table><p><strong>用于异常处理的关键字：</strong></p><table><thead><tr><th>try</th><th>catch</th><th>finally</th><th>throw</th><th>throws</th></tr></thead></table><p><strong>用于包的关键字：</strong></p><table><thead><tr><th>package</th><th>import</th><th></th><th></th><th></th></tr></thead></table><p><strong>其他修饰符关键字：</strong></p><table><thead><tr><th>native</th><th>strictfp</th><th>transien</th><th>volatile</th><th>assert</th></tr></thead><tbody><tr><td>const</td><td>goto</td><td></td><td></td><td></td></tr></tbody></table><p><strong>用于定义数据类型的字面值：</strong></p><table><thead><tr><th>true</th><th>false</th><th>null</th><th></th><th></th></tr></thead></table><h2 id="三、标识符"><a href="#三、标识符" class="headerlink" title="三、标识符"></a>三、标识符</h2><p>Java中变量、方法、类等要素命名时使用的字符序列，称为标识符。</p><blockquote><p>凡是自己可以起名字的地方都叫标识符。</p></blockquote><ul><li><p>标识符命名规则（必须遵守的硬性规定）：</p><ul><li><p>由26个英文字母大小写，0-9 ，_或 $ 组成  </p></li><li><p>数字不可以开头。</p></li><li><p>不可以使用关键字和保留字，但能包含关键字和保留字。</p></li><li><p>Java中严格区分大小写，长度无限制。</p></li><li><p>标识符不能包含空格。</p></li></ul></li><li><p>标识符命名规范（建议遵守的约定俗成）：</p><ul><li><p>包名：多单词组成时所有字母都小写：xxxyyyzzz。<br>例如：java.lang、com.atguigu.bean</p></li><li><p>类名、接口名：多单词组成时，所有单词的首字母大写：XxxYyyZzz<br>例如：HelloWorld，String，System等</p></li><li><p>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写：xxxYyyZzz<br>例如：age,name,bookName,main,binarySearch,getName</p></li><li><p>常量名：所有字母都大写。多单词时每个单词用下划线连接：XXX_YYY_ZZZ<br>例如：MAX_VALUE,PI,DEFAULT_CAPACITY</p></li><li><p>命名要尽量见名知意</p></li></ul></li></ul><h2 id="四、Java中变量的数据类型"><a href="#四、Java中变量的数据类型" class="headerlink" title="四、Java中变量的数据类型"></a>四、Java中变量的数据类型</h2><blockquote><p>Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存总分配了不同大小的内存空间</p></blockquote><h3 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h3><table><thead><tr><th>整数类型</th><th>所占空间</th><th>表示范围</th></tr></thead><tbody><tr><td>byte</td><td>1个字节</td><td>-2^7 ~ 2^7-1</td></tr><tr><td>short</td><td>2个字节</td><td>-2^15 ~ 2^15-1</td></tr><tr><td>int</td><td>4个字节</td><td>-2^31 ~ 2^31-1</td></tr><tr><td>long</td><td>8个字节</td><td>-2^63 ~ 2^63-1</td></tr></tbody></table><table><thead><tr><th>小数类型</th><th>所占空间</th></tr></thead><tbody><tr><td>float</td><td>4个字节</td></tr><tr><td>double</td><td>8个字节</td></tr></tbody></table><ul><li>字符类型</li></ul><p>​char     所占空间大小根据实际编码来决定</p><ul><li>布尔类型</li></ul><p>​boolean    占1个字节</p><h3 id="2-引用数据类型"><a href="#2-引用数据类型" class="headerlink" title="2.引用数据类型"></a>2.引用数据类型</h3><p>略</p><h2 id="二、变量定义的语句格式"><a href="#二、变量定义的语句格式" class="headerlink" title="二、变量定义的语句格式"></a>二、变量定义的语句格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量定义的语句格式：</span><br><span class="line">     数据类型 变量名 = 初始化值;</span><br></pre></td></tr></table></figure><blockquote><p>注意事项：<br> 1、在同一作用域（理解为一个大括号内部）下，变量名不能重复<br> 2、整数默认是int类型，要想定义一个long类型的变量，需要在值的后面加上L或者l，推荐L<br> 3、小数默认是double数据类型<br> 4、要想定义一个float类型的变量,需要在值的后面加上F或者f，推荐F<br> 5、遍历必须要有初始化值,否则无法使用</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">题目:</span></span><br><span class="line"><span class="comment">    1.定义一个byte类型的数据</span></span><br><span class="line"><span class="comment">    2.定义一个short类型的数据</span></span><br><span class="line"><span class="comment">    3.定义一个int类型的数据</span></span><br><span class="line"><span class="comment">    4.定义一个long类型的数据</span></span><br><span class="line"><span class="comment">    5.定义一个float类型的数据</span></span><br><span class="line"><span class="comment">    6.定义一个double类型的数据</span></span><br><span class="line"><span class="comment">    7.定义一个char类型的数据</span></span><br><span class="line"><span class="comment">    8.定义一个boolean类型的数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">datatype</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(a1);</span><br><span class="line">        <span class="type">short</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">        System.out.println(a2);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line">        System.out.println(a3);</span><br><span class="line">        <span class="type">long</span> <span class="variable">a4</span> <span class="operator">=</span> <span class="number">10000000000L</span>;</span><br><span class="line">        System.out.println(a4);</span><br><span class="line">        <span class="type">float</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">12.34F</span>;</span><br><span class="line">        System.out.println(b1);</span><br><span class="line">        <span class="type">double</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">23.45</span>;</span><br><span class="line">        System.out.println(b2);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;逸&#x27;</span>;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(d1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">运行结果:</span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line"><span class="number">10000</span></span><br><span class="line"><span class="number">10000000000</span></span><br><span class="line"><span class="number">12.34</span></span><br><span class="line"><span class="number">23.45</span></span><br><span class="line">逸</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="三、数据类型转换"><a href="#三、数据类型转换" class="headerlink" title="三、数据类型转换"></a>三、数据类型转换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">byte-short-int-long-float-double,   char-boolean</span><br></pre></td></tr></table></figure><blockquote><p>数据类型之间的转换：</p><ul><li><p>自动数据类型转换</p><p>byte,short,char–&gt;int-long-float-double</p></li><li><p>强制类型转换</p><p>语句定义格式：目标数据类型 变量名 &#x3D; (目标数据类型)(表达式或者结果)</p><p>注意：强制数据类型转换，有可能会导致精度损失，不建议基本数据类型之间使用强制类型转换</p></li></ul></blockquote><p>注意事项：</p><ul><li>变量之间参与运算，会先自动提升数据类型</li><li>常量之间参与运算，会先计算出结果，再判断是否在目标数据类型范围内</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataTypeDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="comment">//        byte c1 = a1 + b1;  // 两个变量相加</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">c1</span> <span class="operator">=</span> (<span class="type">byte</span>) (a1 + b1);</span><br><span class="line">        System.out.println(c1);</span><br><span class="line"><span class="comment">//        byte c2 = 3 + 4;  // 两个常量相加</span></span><br><span class="line"><span class="comment">//        System.out.println(c2);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="题1"><a href="#题1" class="headerlink" title="题1:"></a>题1:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> b1=<span class="number">3</span>,b2=<span class="number">4</span>,b;</span><br><span class="line">b=b1+b2;</span><br><span class="line">b=<span class="number">3</span>+<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>哪句是编译失败的呢？为什么呢？</p><p>语句b&#x3D;b1+b2;是编译失败的，Java中默认的整数类型是int,byte类型的b1和b2在运算中会进行自动数据类型转换成int型，无法被byte类型的变量b接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataTypeDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="comment">//        byte c1 = a1 + b1;  // 两个变量相加</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">c1</span> <span class="operator">=</span> (<span class="type">byte</span>) (a1 + b1);</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        <span class="type">byte</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="number">3</span> + <span class="number">4</span>;  <span class="comment">// 两个常量相加</span></span><br><span class="line">        System.out.println(c2);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结果输出:</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h4 id="题2"><a href="#题2" class="headerlink" title="题2:"></a>题2:</h4><ul><li>byte b &#x3D; 130;有没有问题?如果我任然想要赋值，可以怎么做?结果是多少呢?</li><li>练习：byte b &#x3D; 300;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataTypeDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)(<span class="number">130</span>);</span><br><span class="line">        System.out.println(b); <span class="comment">// 输出: -126</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    130的二进制：10000010</span></span><br><span class="line"><span class="comment">    130的补码：00000000 00000000 00000000 10000010</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    截取后：10000010</span></span><br><span class="line"><span class="comment">    已知补码求原码：</span></span><br><span class="line"><span class="comment">                符号位   数值位</span></span><br><span class="line"><span class="comment">        补码：    1      0000010</span></span><br><span class="line"><span class="comment">        反码：    1      0000001</span></span><br><span class="line"><span class="comment">        原码：    1      1111110</span></span><br><span class="line"><span class="comment">                      64+32+16+8+4+2  -&gt;  -126</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataTypeDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)<span class="number">300</span>;</span><br><span class="line">        System.out.println(b); <span class="comment">// 输出: 44</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、加法运算"><a href="#四、加法运算" class="headerlink" title="四、加法运算"></a>四、加法运算</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    面试题:</span></span><br><span class="line"><span class="comment">    写出下列程序的运行结果</span></span><br><span class="line"><span class="comment">        System.out.println(’a’);</span></span><br><span class="line"><span class="comment">        System.out.println(’a’+1);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;hello&quot;+’a’+1);</span></span><br><span class="line"><span class="comment">        System.out.println(’a’+1+&quot;hello&quot;);</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;5+5=&quot;+5+5);</span></span><br><span class="line"><span class="comment">        System.out.println(5+5+&quot;=5+5&quot;);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p>结论：<br>    1、加号两边只要有一边是字符串，就做字符串拼接操作，结果依旧是字符串<br>    2、加号之间的运算顺序是从左向右<br>    3、加号两边只要没有字符串，就做加法运算</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运行结果为:</span><br><span class="line">a</span><br><span class="line"><span class="number">98</span><span class="comment">//字符与数值之间运算，会先将字符转变成对应的ASCII码值，再运算</span></span><br><span class="line">helloa1</span><br><span class="line">98hello</span><br><span class="line"><span class="number">5</span>+<span class="number">5</span>=<span class="number">55</span></span><br><span class="line"><span class="number">10</span>=<span class="number">5</span>+<span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h2><h3 id="1-基本定义"><a href="#1-基本定义" class="headerlink" title="1.基本定义"></a>1.基本定义</h3><ul><li>运算</li></ul><p>​对常量和变量进行操作的过程称为运算。</p><ul><li>运算符</li></ul><p>​对常量和变量进行操作的符号称为运算符</p><ul><li>操作数</li></ul><p>​参与运算的数据称为操作数</p><ul><li>表达式</li></ul><p>​用运算符把常量或者变量连接起来符号java语法的式子就可以称为表达式。不同运算符连接的式子体现的是不同类型的表达式</p><blockquote><p>举例：</p><p> int a &#x3D; 3 + 4;</p><p> 这是做了一个加法运算</p><p> +就是运算符，是算术运算符，我们还有其他很多的运算符</p><p> 3，4就是参与运算的操作数据</p><p> 3 + 4整体其实就是一个算数表达式</p></blockquote><h3 id="2-运算符"><a href="#2-运算符" class="headerlink" title="2.运算符"></a>2.运算符</h3><h4 id="2-1算术运算符"><a href="#2-1算术运算符" class="headerlink" title="2.1算术运算符"></a>2.1算术运算符</h4><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th align="left">结果</th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td align="left">3</td></tr><tr><td>-</td><td>负号</td><td>b &#x3D; 4 ; - b</td><td align="left">- 4</td></tr><tr><td>+</td><td>加号</td><td>5 + 5</td><td align="left">10</td></tr><tr><td>-</td><td>减号</td><td>6 - 4</td><td align="left">2</td></tr><tr><td>*</td><td>乘号</td><td>3 * 4</td><td align="left">12</td></tr><tr><td>&#x2F;</td><td>除号</td><td>6 &#x2F; 3</td><td align="left">2</td></tr><tr><td>%</td><td>取模(取余)</td><td>5 &#x2F; 5</td><td align="left">0</td></tr><tr><td>++</td><td>自增（前）</td><td>a &#x3D; 2 ; b &#x3D; ++ a ;</td><td align="left">a &#x3D; 3 ; b &#x3D; 3</td></tr><tr><td>++</td><td>自增（后）</td><td>a &#x3D; 2 ; b &#x3D; a ++ ;</td><td align="left">a &#x3D; 3 ; b &#x3D; 2</td></tr><tr><td>–</td><td>自减（前）</td><td>a &#x3D; 2 ; b &#x3D; – a ;</td><td align="left">a &#x3D; 1 ; b &#x3D; 1</td></tr><tr><td>–</td><td>自减（后）</td><td>a &#x3D; 2 ; b &#x3D; a – ;</td><td align="left">a &#x3D; 1 ; b &#x3D; 2</td></tr><tr><td>+</td><td>字符串相加</td><td>“He”  +  “llo”</td><td align="left">“Hello”</td></tr></tbody></table><blockquote><p>注意：</p><ul><li><p>表达式最终结果的数据类型，由参与运算中最大的数据类型决定</p><p>byte–short–char——&gt; int–long–float–double</p></li><li><p>自增(或自减)运算在前时，先自增(或自减),然后在参与运算</p><p>自增(或自减)运算在后时，先参与运算，然后在自增(或自减)</p></li></ul></blockquote><h4 id="2-2赋值运算符"><a href="#2-2赋值运算符" class="headerlink" title="2.2赋值运算符"></a>2.2赋值运算符</h4><table><thead><tr><th>运算符</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>&#x3D;</td><td>a1 &#x3D; 4</td><td>a1 &#x3D; 4</td></tr><tr><td>+&#x3D;</td><td>a2 &#x3D; 4 ; a2 +&#x3D; 2;</td><td>a2 &#x3D; 6</td></tr><tr><td>-&#x3D;</td><td>a3 &#x3D; 4 ; a3 -&#x3D; 2;</td><td>a3 &#x3D; 2</td></tr><tr><td>*&#x3D;</td><td>a4 &#x3D; 4 ; a4 *&#x3D; 2;</td><td>a4 &#x3D; 8</td></tr><tr><td>&#x2F;&#x3D;</td><td>a5 &#x3D; 4 ; a5 &#x2F;&#x3D; 2;</td><td>a5 &#x3D; 2</td></tr><tr><td>%&#x3D;</td><td>a6 &#x3D; 4 ; a6 %&#x3D; 2;</td><td>a6 &#x3D; 0</td></tr></tbody></table><blockquote><p>注意：</p><p>s +&#x3D; 1 ;并不等效于 s &#x3D; s + 1 ;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">面试题:</span></span><br><span class="line"><span class="comment">short s=1, s = s+1; short s=1, s+=1;</span></span><br><span class="line"><span class="comment">上面两个代码有没有问题，如果有，那里有问题</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">代码 <span class="type">short</span> s=<span class="number">1</span>, s = s+<span class="number">1</span>;会报错，变量s为<span class="type">short</span>类型，进行s+<span class="number">1</span>运算后会自动转换为<span class="type">int</span>类型，无法被<span class="type">short</span>类型的变量s接收</span><br></pre></td></tr></table></figure><h4 id="2-3关系运算符-比较运算符"><a href="#2-3关系运算符-比较运算符" class="headerlink" title="2.3关系运算符(比较运算符)"></a>2.3关系运算符(比较运算符)</h4><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td><td>4&#x3D;&#x3D;3</td><td>false</td></tr><tr><td>!&#x3D;</td><td>不等于</td><td>4!&#x3D;3</td><td>true</td></tr><tr><td>&lt;</td><td>小于</td><td>4&lt;3</td><td>false</td></tr><tr><td>&gt;</td><td>大于</td><td>4&gt;3</td><td>true</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td><td>4&lt;&#x3D;3</td><td>false</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td><td>4&gt;&#x3D;3</td><td>true</td></tr><tr><td>instanceof</td><td>检查是否是类的对象</td><td>“Hello”  instanceof  String</td><td>true</td></tr></tbody></table><blockquote><p>注意：</p><ul><li>比较运算符的结果都是boolean型，也就是要么是true，要么是false</li><li>比较运算符“&#x3D;&#x3D;”不能误写成“&#x3D;”</li></ul></blockquote><h4 id="2-4逻辑运算符"><a href="#2-4逻辑运算符" class="headerlink" title="2.4逻辑运算符"></a>2.4逻辑运算符</h4><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>&amp;(有false则false)</td><td>与(AND)</td><td>false&amp;true</td><td>false</td></tr><tr><td>|(有true则true)</td><td>或(OR)</td><td>false|true</td><td>true</td></tr><tr><td>^(相同则false，不同则true)</td><td>异或(XOR)</td><td>true^false</td><td>true</td></tr><tr><td>!(将true变为false，将false变为true)</td><td>非(Not)</td><td>!true</td><td>false</td></tr><tr><td>&amp;&amp;</td><td>短路(AND)</td><td>false&amp;&amp;true</td><td>false</td></tr><tr><td>||</td><td>短路(OR)</td><td>false||true</td><td>true</td></tr></tbody></table><blockquote><p>注意：</p><ul><li>Java中不允许连续比较，如：3&lt;x&lt;6，应当使用逻辑运算符用于连接布尔型表达式，如：x&gt;3 &amp; x&lt;6 </li><li>“&amp;”和“&amp;&amp;”的区别：<ul><li>“&amp;” 左边无论真假，右边都进行运算；</li><li>“&amp;&amp;” 如果左边为真，右边参与运算，如果左边为假，那么右边不参与运算。</li></ul></li><li>“|”和“||”的区别：<ul><li>“|” 左边无论真假，右边都进行运算</li><li>“||” 左边为真，右边不参与运算。</li></ul></li><li>异或( ^ )与或( | )的不同之处是：当左右都为true时，结果为false。</li></ul></blockquote><h4 id="2-5位运算符"><a href="#2-5位运算符" class="headerlink" title="2.5位运算符"></a>2.5位运算符</h4><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>&amp;(有0则0)</td><td>与运算</td><td>3&amp;4</td><td>0</td></tr><tr><td>|(有1则1)</td><td>或运算</td><td>3|4</td><td>7</td></tr><tr><td>^(相同则0，不同则1)</td><td>异或运算</td><td>3^4</td><td>7</td></tr><tr><td>~(0变成1,1变成0)</td><td>反码</td><td>~4</td><td>-5</td></tr><tr><td>&lt;&lt;</td><td>左移</td><td>3&lt;&lt;2</td><td>12</td></tr><tr><td>&gt;&gt;</td><td>右移</td><td>24&gt;&gt;2</td><td>6</td></tr><tr><td>&gt;&gt;&gt;</td><td>无符号右移</td><td>-24&gt;&gt;2</td><td>1073741818</td></tr></tbody></table><blockquote><p>注意：</p><ul><li>“&gt;&gt;” 补码向右移若干位,多余的舍去,不足的根据最高位补足,最高位为1则补1,否则补0,右移n位等效于除以2^n</li><li>“&lt;&lt;” 补码向左移若干位,多余的舍去,不足的用0补齐,左移n位等效于乘上2^n</li><li>“&gt;&gt;&gt;”补码向右移若干位,多余的舍去,不足的用0补齐</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    位运算符：参与运算的符号两边是数值，结果也是一个数值</span></span><br><span class="line"><span class="comment">        &amp; | ^ ~ &gt;&gt; &lt;&lt; &gt;&gt;&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeiOptDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        System.out.println(a &amp; b); <span class="comment">// 0</span></span><br><span class="line">        System.out.println(a | b); <span class="comment">// 7</span></span><br><span class="line">        System.out.println(a ^ b); <span class="comment">// 7</span></span><br><span class="line">        System.out.println(~ b); <span class="comment">// -5</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    3的补码：00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">    4的补码：00000000 00000000 00000000 00000100</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &amp;：有0则0</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">      &amp;</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000100</span></span><br><span class="line"><span class="comment">       --------------------------------------</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000000  --&gt; 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    |：有1则1</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">      |</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000100</span></span><br><span class="line"><span class="comment">       --------------------------------------</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000111  --&gt; 7</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ^：相同则0，不同则1</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">      ^</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000100</span></span><br><span class="line"><span class="comment">       --------------------------------------</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000111  --&gt; 7</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ~：0变成1，1变成0</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000100</span></span><br><span class="line"><span class="comment">     ~</span></span><br><span class="line"><span class="comment">        11111111 11111111 11111111 11111011</span></span><br><span class="line"><span class="comment">     已知补码求原码：</span></span><br><span class="line"><span class="comment">      补码：  1   1111111 11111111 11111111 11111011</span></span><br><span class="line"><span class="comment">      反码：  1   1111111 11111111 11111111 11111010</span></span><br><span class="line"><span class="comment">      原码：  1   0000000 00000000 00000000 00000101   --&gt;  -5</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeiOptDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">24</span>&gt;&gt;<span class="number">2</span>); <span class="comment">// 6  24/4=6  24/2^2=6</span></span><br><span class="line">        System.out.println(<span class="number">3</span>&lt;&lt;<span class="number">2</span>); <span class="comment">// 12 3*4=12 3*2^2=12</span></span><br><span class="line"></span><br><span class="line">        System.out.println(-<span class="number">24</span>&gt;&gt;&gt;<span class="number">2</span>); <span class="comment">// 1073741818</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    24的补码：00000000 00000000 0000000 00011000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    24&gt;&gt;2:</span></span><br><span class="line"><span class="comment">        00000000 00000000 0000000 00011000</span></span><br><span class="line"><span class="comment">        00000000 00000000 0000000 00000110(00)  --&gt; 6</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    3的补码：00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">    3&lt;&lt;2:</span></span><br><span class="line"><span class="comment">        00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">    (00)000000 00000000 00000000 0000001100   --&gt; 12</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    -24的原码：10000000 00000000 0000000 00011000</span></span><br><span class="line"><span class="comment">         反码：11111111 11111111 11111111 11100111</span></span><br><span class="line"><span class="comment">         补码：11111111 11111111 11111111 11101000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         11111111 11111111 11111111 11101000</span></span><br><span class="line"><span class="comment">         0011111111 11111111 11111111 111010(00)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h4 id="2-6三目运算符-三元运算符"><a href="#2-6三目运算符-三元运算符" class="headerlink" title="2.6三目运算符(三元运算符)"></a>2.6三目运算符(三元运算符)</h4><blockquote><p>三目运算符：<br>    语句定义格式：(关系表达式)?表达式1:表达式2;<br>    注意：三目运算符必须要有一个返回结果</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SanMuOPt</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">c</span> <span class="operator">=</span> (a&gt;<span class="number">3</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行结果:</span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求整数a,b,c的最大值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SanMuOPt</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">2</span>,b=<span class="number">4</span>,c=<span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> (((a&gt;b)?a:b)&gt;c)?((a&gt;b)?a:b):c;</span><br><span class="line">        System.out.println(<span class="string">&quot;a,b,c中的最大值为:&quot;</span> + res);</span><br><span class="line"><span class="comment">//        int a = 3;</span></span><br><span class="line"><span class="comment">//        boolean c = (a&gt;3)?true:false;</span></span><br><span class="line"><span class="comment">//        System.out.println(c);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行结果:</span><br><span class="line">a,b,c中的最大值为:<span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="3-运算符优先级"><a href="#3-运算符优先级" class="headerlink" title="3.运算符优先级"></a>3.运算符优先级</h3><p>运算符的优先级（从高到低）</p><table><thead><tr><th>优先级</th><th>描述</th><th>运算符</th></tr></thead><tbody><tr><td>1</td><td>括号</td><td>()、[]</td></tr><tr><td>2</td><td>正负号</td><td>+、-</td></tr><tr><td>3</td><td>自增自减，非</td><td>++、–、!</td></tr><tr><td>4</td><td>乘除，取余</td><td>*、&#x2F;、%</td></tr><tr><td>5</td><td>加减</td><td>+、-</td></tr><tr><td>6</td><td>移位运算</td><td>&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</td></tr><tr><td>7</td><td>大小关系</td><td>&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</td></tr><tr><td>8</td><td>相等关系</td><td>&#x3D;&#x3D;、!&#x3D;</td></tr><tr><td>9</td><td>按位与</td><td>&amp;</td></tr><tr><td>10</td><td>按位异或</td><td>^</td></tr><tr><td>11</td><td>按位或</td><td>|</td></tr><tr><td>12</td><td>逻辑与</td><td>&amp;&amp;</td></tr><tr><td>13</td><td>逻辑或</td><td>||</td></tr><tr><td>14</td><td>条件运算</td><td>?:</td></tr><tr><td>15</td><td>赋值运算</td><td>&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</td></tr><tr><td>16</td><td>位赋值运算</td><td>&amp;&#x3D;、|&#x3D;、&lt;&lt;&#x3D;、&gt;&gt;&#x3D;、&gt;&gt;&gt;&#x3D;</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识java</title>
      <link href="/2024/02/21/%E5%88%9D%E8%AF%86Java/"/>
      <url>/2024/02/21/%E5%88%9D%E8%AF%86Java/</url>
      
        <content type="html"><![CDATA[<h1 id="初始Java"><a href="#初始Java" class="headerlink" title="初始Java"></a>初始Java</h1><h2 id="一、Java语言平台版本"><a href="#一、Java语言平台版本" class="headerlink" title="一、Java语言平台版本"></a>一、Java语言平台版本</h2><ul><li>J2SE(Java 2 Platform Standard Edition)标准版</li></ul><blockquote><p>是为开发普通桌面和商务应用程序提供的解决方案</p><p>该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发</p></blockquote><ul><li>J2ME(Java 2 Platform Micro Edition)小型版</li></ul><blockquote><p>是为开发电子消费产品和嵌入式设备提供的解决方案(几乎不使用)</p></blockquote><ul><li>J2EE(Java 2 Platform Enterprise Edition)企业版</li></ul><blockquote><p>是为开发企业环境下的应用程序提供的一套解决方案</p><p>该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发</p></blockquote><h2 id="二、Java语言特点"><a href="#二、Java语言特点" class="headerlink" title="二、Java语言特点"></a>二、Java语言特点</h2><h3 id="1-优点"><a href="#1-优点" class="headerlink" title="1.优点"></a>1.优点</h3><ul><li><p>高性能：</p><ul><li><p>Java最初发展阶段，总是被人诟病“<code>性能低</code>”；客观上，高级语言运行效率总是低于低级语言的，这个无法避免。Java语言本身发展中通过虚拟机的优化提升了<code>几十倍运行效率</code>。比如，通过JIT(JUST IN TIME)即时编译技术提高运行效率。</p></li><li><p><code>Java低性能的短腿，已经被完全解决了</code>。业界发展上，我们也看到很多C++应用转到Java开发，很多C++程序员转型为Java程序员。</p></li></ul></li><li><p>简单性：</p><p>Java就是C++语法的<code>简化版</code>，我们也可以将Java称之为“<code>C++--</code>”。比如：头文件，指针运算，结构，联合，操作符重载，虚基类等。</p></li><li><p>面向对象性：</p><p>​面向对象是一种程序设计技术，非常<code>适合大型软件的设计和开发</code>。面向对象编程支持封装、继承、多态等特性，让程序更好达到<code>高内聚</code>，<code>低耦合</code>的标准。</p></li><li><p>健壮性：</p><p>​吸收了C&#x2F;C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制。</p></li><li><p>安全性：</p><p>​Java适合于网络&#x2F;分布式环境，需要提供一个安全机制以防恶意代码的攻击。如：<code>安全防范机制</code>（ClassLoader类加载器），可以分配不同的命名空间以防替代本地的同名类、字节代码检查。</p></li><li><p>跨平台性：</p><p>​这是Java的核心优势。Java在最初设计时就很注重移植和跨平台性。比如：Java的int永远都是32位。不像C++可能是16，32，可能是根据编译器厂商规定的变化</p><blockquote><p>什么是跨平台性？</p><p>通过Java语言编写的应用程序在不同的系统平台上都可以运行。</p><p>原理:</p><p>只要在需要运行java应用程序的操作系统上，</p><p>先安装一个Java虚拟机(JVM Java Virtual Machine)即可。</p><p>由JVM来负责Java程序在该系统中的运行。</p></blockquote></li></ul><h3 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2.缺点"></a>2.缺点</h3><ul><li><code>语法过于复杂、严谨</code>，对程序员的约束比较多，与python、php等相比入门较难。但是一旦学会了，就业岗位需求量大，而且<code>薪资待遇节节攀升</code>。</li><li>一般适用于大型网站开发，<code>整个架构会比较重</code>，对于初创公司开发和维护人员的成本比较高（即薪资高），选择用Java语言开发网站或应用系统的需要一定的经济实力。</li><li><code>并非适用于所有领域</code>。比如，Objective C、Swift在iOS设备上就有着无可取代的地位。浏览器中的处理几乎完全由JavaScript掌控。Windows程序通常都用C++或C#编写。Java在服务器端编程和跨平台客户端应用领域则很有优势。</li></ul><h2 id="三、JDK-JRE与JVM"><a href="#三、JDK-JRE与JVM" class="headerlink" title="三、JDK,JRE与JVM"></a>三、JDK,JRE与JVM</h2><ul><li>JVM，即Java虚拟机(JVM Java Virtual Machine)，由JVM来负责Java程序在对应系统中的运行，Java语言本身没有跨平台性，它的跨平台性由JVM保障</li><li>JRE，即Java运行环境(Java Runtime Environment)，包括<strong>JVM</strong>( Java虚拟机 Java Virtual Machine)和Java程序所需的<strong>核心类库</strong>等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</li><li>JDK，即Java开发工具包(Java Development Kit)，JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了<strong>JRE</strong>。所以安装了JDK，就不用在单独安装JRE了。其中的开发工具：编译工具(javac.exe) 打包工具(jar.exe)等</li></ul><p>简单而言：使用JDK开发完成的java程序，交给JRE去运行。</p><blockquote><p> 公式：</p><ul><li>JDK &#x3D; JRE + 开发工具集</li><li>JRE &#x3D; JVM + Java SE标准类库</li></ul></blockquote><p>常用JDK版本：Java8  Java11  Java17</p><h2 id="四、JDK的安装部署"><a href="#四、JDK的安装部署" class="headerlink" title="四、JDK的安装部署"></a>四、JDK的安装部署</h2><h3 id="1-JDK下载"><a href="#1-JDK下载" class="headerlink" title="1.JDK下载"></a>1.JDK下载</h3><p><a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></p><h3 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2.安装JDK"></a>2.安装JDK</h3><h3 id="3-环境变量"><a href="#3-环境变量" class="headerlink" title="3.环境变量"></a>3.环境变量</h3><blockquote><p>右击此电脑–&gt;属性–&gt;高级系统设置–&gt;环境变量–&gt;系统变量<br>配置Path环境变量(必须配置的)（目的：为了可以在任意目录下找到javac和java命令）<br>    方式1：直接在Path变量中添加jdk的bin目录的完整路径<br>        系统变量–&gt;Path–&gt;新建–&gt;D:\soft\java\jdk\bin<br>    方式2：（推荐）使用另外一个变量存储jdk的安装目录，使用%的方式进行引用<br>配置CLASSPATH环境变量(选配) (目的：为了让class文件可以在任意目录下被找到)</p></blockquote><h2 id="五、Java代码运行原理"><a href="#五、Java代码运行原理" class="headerlink" title="五、Java代码运行原理"></a>五、Java代码运行原理</h2><blockquote><p>首先编写java源代码程序，扩展名.java</p><p>在命令行模式中，输入javac命令对源代码进行编译，生成字节码文件</p><p>javac 源文件名.class</p><p>编译完成后，如果没有报错信息，输入java命令对class字节码文件进行解释运行,执行时不需要添加.class扩展名</p><p>java HelloWorld</p></blockquote><p><img src="https://gitee.com/zhi-tu/image_demo1/raw/master/img/image-20240220192620176.png" alt="image-20240220192620176"></p><h2 id="六、IDEA安装部署"><a href="#六、IDEA安装部署" class="headerlink" title="六、IDEA安装部署"></a>六、IDEA安装部署</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><blockquote><p><a href="https://www.jetbrains.com/idea/download/?section=windows">https://www.jetbrains.com/idea/download/?section=windows</a></p></blockquote><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown基本使用语法</title>
      <link href="/2024/02/14/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/02/14/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown基本使用语法"><a href="#MarkDown基本使用语法" class="headerlink" title="MarkDown基本使用语法"></a>MarkDown基本使用语法</h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><p>“# 第一标题”，“## 第二标题”……“##### 第五标题”</p><blockquote><h1 id="第一标题"><a href="#第一标题" class="headerlink" title="第一标题"></a>第一标题</h1><h2 id="第二标题"><a href="#第二标题" class="headerlink" title="第二标题"></a>第二标题</h2><h3 id="第三标题"><a href="#第三标题" class="headerlink" title="第三标题"></a>第三标题</h3><h4 id="第四标题"><a href="#第四标题" class="headerlink" title="第四标题"></a>第四标题</h4><h5 id="第五标题"><a href="#第五标题" class="headerlink" title="第五标题"></a>第五标题</h5></blockquote><hr><h2 id="二、-副标题"><a href="#二、-副标题" class="headerlink" title="二、 副标题"></a>二、 副标题</h2><p>“ - ”副标题“tab”子标题“tab+tab”孙子标题</p><blockquote><ul><li>副标题<ul><li>子标题<ul><li>孙子标题</li></ul></li></ul></li></ul></blockquote><hr><h2 id="三、代码块"><a href="#三、代码块" class="headerlink" title="三、代码块"></a>三、代码块</h2><p>“&#96;&#96;&#96;语言”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">```java</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="keyword">static</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```python</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```shell</span><br><span class="line">echo &quot;Hello World!&quot; &gt;&gt; hello.txt</span><br></pre></td></tr></table></figure><hr><h2 id="四、表格"><a href="#四、表格" class="headerlink" title="四、表格"></a>四、表格</h2><p>“段落——表格”</p><table><thead><tr><th>姓名</th><th>性别</th><th>年龄</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>18</td></tr><tr><td>李四</td><td>女</td><td>17</td></tr><tr><td>王五</td><td>未知</td><td>19</td></tr></tbody></table><hr><h2 id="五、注释"><a href="#五、注释" class="headerlink" title="五、注释"></a>五、注释</h2><p>“&gt;”为注释</p><blockquote><p>这是一行注释</p></blockquote><hr><h2 id="六、分割线"><a href="#六、分割线" class="headerlink" title="六、分割线"></a>六、分割线</h2><p>“-”三个以上为分割线</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python环境搭建</title>
      <link href="/2024/02/14/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/02/14/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Python环境搭建"><a href="#Python环境搭建" class="headerlink" title="Python环境搭建"></a>Python环境搭建</h1><h2 id="1、工具需求"><a href="#1、工具需求" class="headerlink" title="1、工具需求"></a>1、工具需求</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">需要下载python解释器，来运行我们的python文件</span><br><span class="line"></span><br><span class="line">下载网址：https://www.python.org</span><br></pre></td></tr></table></figure><h2 id="2、环境搭建"><a href="#2、环境搭建" class="headerlink" title="2、环境搭建"></a>2、环境搭建</h2><h3 id="2-1-python解释器"><a href="#2-1-python解释器" class="headerlink" title="2.1 python解释器"></a>2.1 python解释器</h3><h4 id="2-1-1-安装"><a href="#2-1-1-安装" class="headerlink" title="2.1.1 安装"></a>2.1.1 安装</h4><p><img src="https://gitee.com/xiaohuya1/image29_demo1/raw/master/img/image-20240104155011391.png" alt="image-20240104155011391"></p><blockquote><p>安装成功界面</p></blockquote><p><img src="https://gitee.com/xiaohuya1/image29_demo1/raw/master/img/image-20240104155252029.png" alt="image-20240104155252029"></p><h4 id="2-1-2-python安装目录结构"><a href="#2-1-2-python安装目录结构" class="headerlink" title="2.1.2 python安装目录结构"></a>2.1.2 python安装目录结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">根目录：D:\soft\Python37</span><br><span class="line">    - python.exe</span><br><span class="line">    - Scripts</span><br><span class="line">     - pip.exe  # 为了之后下载第三方库使用的命令  pip install xxx</span><br><span class="line">     - pip3.7.exe</span><br><span class="line">     - pip3.exe</span><br><span class="line">    - Lib  # 放python内置的模块和第三方的模块</span><br><span class="line">    - re.py</span><br><span class="line">    - site-packages</span><br><span class="line">    - 第三方模块的放置处</span><br></pre></td></tr></table></figure><h4 id="2-1-2-环境变量"><a href="#2-1-2-环境变量" class="headerlink" title="2.1.2 环境变量"></a>2.1.2 环境变量</h4><blockquote><p>打开命令行的方式 win+R, 输入cmd</p><p>盘符:   切换盘符</p><p>cd 目录  切换文件夹</p><p>dir   查看当前文件夹下的文件和文件夹内容</p></blockquote><ul><li>编写python文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>运行python文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python.exe E:\hello.txt</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>环境变量的目的是为了在任意目录下可以找到python.exe命令以及pip命令</li><li>严格意义上，一个符合python语法规范的文件要以.py后缀</li></ul></li></ul><h3 id="2-2-Pycharm安装"><a href="#2-2-Pycharm安装" class="headerlink" title="2.2 Pycharm安装"></a>2.2 Pycharm安装</h3><blockquote><p>创建项目并指定python解释器</p></blockquote><p><img src="https://gitee.com/xiaohuya1/image29_demo1/raw/master/img/image-20240104165535302.png" alt="image-20240104165535302"></p><h4 id="2-2-1-修改pip源"><a href="#2-2-1-修改pip源" class="headerlink" title="2.2.1 修改pip源"></a>2.2.1 修改pip源</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">找到系统盘下C:\用户\用户名\AppData\Roaming，APPData可能是隐藏文件，需要将隐藏关闭；</span><br><span class="line"></span><br><span class="line">查看在Roaming文件夹下有没有一个pip文件夹，如果没有创建一个；</span><br><span class="line"></span><br><span class="line">进入pip文件夹，创建一个pip.ini文件；</span><br><span class="line"></span><br><span class="line">使用记事本的方式打开pip.ini文件，写入：</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">index-url=http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">临时修改</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple numpy</span><br></pre></td></tr></table></figure><ul><li>下载命令<ul><li>pip install xxx  默认下载的是最新版本的库</li><li>pip install xxx&#x3D;&#x3D;1.0.1   指定下载对应版本</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>后期更新：</p><p>更换背景图片</p><p>添加评论功能</p><p>添加访客记录功能</p><p>添加网站累计运行时间</p><p>添加文章封面</p><p>添加打赏功能</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签页</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<p>python<br>markdown<br>java</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
